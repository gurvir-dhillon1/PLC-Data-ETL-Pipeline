services:
  broker:
    image: apache/kafka:latest
    container_name: broker
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@broker:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 2
    ports:
      - "9092:9092"
      - "9093:9093"
  producer:
    build: ./producer
    container_name: producer
    depends_on:
      - broker
    environment:
      KAFKA_BOOTSTRAP_SERVERS: "broker:9092"
      THREAD_COUNT: 4
      INTERVAL_MS: 10
      BATCH_SIZE: 16384
      LINGER_MS: 10
      INDIVIDUAL_THREAD_MSGS: 1000
  consumer:
    build: ./consumer
    container_name: consumer
    depends_on:
      - broker
    environment:
      KAFKA_BOOTSTRAP_SERVERS: "broker:9092"
      BATCH_SIZE: 500
      BATCH_TIMEOUT: 1
  db:
    image: postgres
    restart: always
    # set shared memory limit when using docker compose
    shm_size: 128mb
    # or set shared memory limit when deploy via swarm stack
    #volumes:
    #  - type: tmpfs
    #    target: /dev/shm
    #    tmpfs:
    #      size: 134217728 # 128*2^20 bytes = 128Mb
    volumes:
      - ./postgres/:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_USER: "user"
      POSTGRES_PASSWORD: example
      POSTGRES_DB: "plc_data"

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
